print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Å–º–æ—Å. –ü–æ–¥–æ–∂–¥–∏—Ç–µ —Å–µ–∫—É–Ω–¥—É...")
# –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Å–º–æ—Å –±–æ—Ç –∏–≥—Ä–∞ –æ—Ç @queuejw
# –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
import asyncio
import logging
import random
import sys
from asyncio import CancelledError
from types import NoneType

# aiogram
from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramBadRequest, TelegramRetryAfter
from aiogram.filters import Command, CommandObject
from aiogram.methods import DeleteWebhook
from aiogram.types import Message, CallbackQuery

import helpers.chat_utils
from handlers import start_help_info_handler
from helpers.keyboards import get_computer_inline_keyboard, get_self_destruction_inline_keyboard, \
    get_fire_inline_keyboard, get_craft_keyboard, get_storage_inline_keyboard

all_ships = {}


# –£–¥–∞–ª—è–µ—Ç —á–∞—Ç –∏–∑ all_ships
def remove_chat_from_all_ships(chat_id: int):
    all_ships.pop(chat_id)


REPAIR_EMOJI = ["üî®", "‚öíÔ∏è", "üõ†", "‚õèÔ∏è", "ü™ö", "‚öôÔ∏è", "üîß", "ü™õ"]

TOKEN = helpers.chat_utils.get_token()
PLANETS = helpers.chat_utils.get_planets()
dp = Dispatcher()
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))


# –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ –∫–æ—Ä–∞–±–ª—å —á–∞—Ç–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ.
def is_chat_active(chat_id: int) -> bool:
    return chat_id in all_ships


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def add_user_to_white_list(user_id: int, chat_id: int) -> bool:
    users: list = all_ships[chat_id]['crew']
    if len(users) > 1:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º False, –µ—Å–ª–∏ –∫–∞–ø–∏—Ç–∞–Ω –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if user_id == users[0]:
            return False
    users.append(user_id)
    all_ships[chat_id]['crew'] = users
    return True


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª–∏—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def del_user_from_white_list(user_id: int, chat_id: int) -> bool:
    users: list = all_ships[chat_id]['crew']
    if len(users) > 1:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º False, –µ—Å–ª–∏ –∫–∞–ø–∏—Ç–∞–Ω –ø—ã—Ç–∞–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if user_id == users[0]:
            return False
    users.remove(user_id)
    all_ships[chat_id]['crew'] = users
    return True


#  –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
def is_user_allowed(user_id: int, chat_id: int) -> bool:
    users: list = all_ships[chat_id]['crew']
    return user_id in users


# –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –≤ –¥–∞–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–æ
def is_actions_blocked(chat_id: int) -> bool:
    return all_ships[chat_id]['blocked']


# –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ —Ç–æ–º, —á—Ç–æ –±—ã–ª–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
async def notify_players(chat_id: int, loaded_state: dict):
    # –£–≤–µ–¥–æ–º–ª—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ.
    if not loaded_state['default']:
        await bot.send_message(chat_id, "–ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ. ‚òÄÔ∏è")
    else:
        # –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –∫–æ—Ä–∞–±–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
        loaded_state['default'] = False


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∞–±–ª—è –≤ —á–∞—Ç–µ
def create_new_ship(message: Message):
    chat_id = message.chat.id
    print(f"–°–æ–∑–¥–∞—é –∫–æ—Ä–∞–±–ª—å –¥–ª—è —á–∞—Ç–∞ {chat_id}")
    loaded_state = helpers.chat_utils.load_chat_state(chat_id)
    asyncio.create_task(notify_players(chat_id, loaded_state))
    loaded_state['captain'] = message.from_user.first_name
    all_ships[chat_id] = loaded_state
    add_user_to_white_list(message.from_user.id, chat_id)
    helpers.chat_utils.save_chat_state(chat_id, all_ships[chat_id])


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–∞–±–ª—è –¥–ª—è —á–∞—Ç–∞
@dp.message(Command("–∏–≥—Ä–∞—Ç—å"))
async def play(message: Message):
    chat_id = message.chat.id
    if is_chat_active(chat_id):
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ—Ä–∞–±–ª—å –≤ –∫–æ—Å–º–æ—Å:\n–ò–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞. ‚ö†Ô∏è")
        return
    # –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–∞–±–ª—å –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
    create_new_ship(message)
    asyncio.create_task(game_loop(chat_id))
    asyncio.create_task(game_loop_planet_change(chat_id))
    asyncio.create_task(game_loop_events(chat_id))
    text = (
        "üöÄ–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n"
        "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /–ø–æ–º–æ—â—å , —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.\n"
        "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã—Ö —á–ª–µ–Ω–æ–≤ —ç–∫–∏–ø–∞–∂–∞ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /–¥–æ–±–∞–≤–∏—Ç—å . –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥."
    )
    await message.answer(text)


# –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ.
def clamp(value, min_value, max_value):
    return max(min_value, min(max_value, value))


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
def get_computer_text(chat_id: int) -> str:
    state = all_ships[chat_id]
    if not state["on_planet"]:
        # –í –∫–æ—Å–º–æ—Å–µ
        text = (
            "üì∫–ë–û–†–¢–û–í–û–ô –ö–û–ú–ü–¨–Æ–¢–ï–†üì∫\n"
            "=============\n"
            f"üöÄ–ö–æ—Ä–∞–±–ª—å {state['ship_name']}\n"
            f"üëë –ö–∞–ø–∏—Ç–∞–Ω –∫–æ—Ä–∞–±–ª—è: {state['captain']}\n"
            "=============\n"
            f"üìè–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {state['distance']} –∫–º\n"
            f"ü™ê–°–ª–µ–¥—É—é—â–∏–π –æ–±—ä–µ–∫—Ç: {state['next_planet_name']}\n"
            f"üåé–ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—ä–µ–∫—Ç: {state['previous_planet_name']}\n"
            "=============\n"
            f"üõ°Ô∏è–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è: {state['ship_health']}%\n"
            f"‚õΩÔ∏è–£—Ä–æ–≤–µ–Ω—å —Ç–æ–ø–ª–∏–≤–∞: {state['ship_fuel']}%\n"
            f"üöÄ–°–∫–æ—Ä–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è: {state['ship_speed']} –∫–º/—á\n"
            "=============\n"
            f"‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ —ç–∫–∏–ø–∞–∂–∞: {state['crew_health']}%\n"
            f"üí®–£—Ä–æ–≤–µ–Ω—å –≤–æ–∑–¥—É—Ö–∞: {state['crew_oxygen']}%\n"
            f"üì¶–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {state['resources']}\n"
        )
        return text
    else:
        # –ù–∞ –ø–ª–∞–Ω–µ—Ç–µ
        text = (
            "üì∫–ë–û–†–¢–û–í–û–ô –ö–û–ú–ü–¨–Æ–¢–ï–†üì∫\n"
            "=============\n"
            f"üöÄ–ö–æ—Ä–∞–±–ª—å {state['ship_name']}\n"
            f"üëë –ö–∞–ø–∏—Ç–∞–Ω –∫–æ—Ä–∞–±–ª—è: {state['captain']}\n"
            "=============\n"
            f"üåé–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ: {state['planet_name']}\n"
            "=============\n"
            f"üõ°Ô∏è–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è: {state['ship_health']}%\n"
            f"‚õΩÔ∏è–£—Ä–æ–≤–µ–Ω—å —Ç–æ–ø–ª–∏–≤–∞: {state['ship_fuel']}%\n"
            "=============\n"
            f"‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ —ç–∫–∏–ø–∞–∂–∞: {state['crew_health']}%\n"
            f"üí®–£—Ä–æ–≤–µ–Ω—å –≤–æ–∑–¥—É—Ö–∞: {state['crew_oxygen']}%\n"
            f"üì¶–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {state['resources']}\n"
        )
    return text


# –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∞–±–ª–µ —á–∞—Ç–∞
@dp.message(Command("–∫–æ–º–ø—å—é—Ç–µ—Ä", "–∫"))
async def computer(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∞–±–ª–µ:\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    text = get_computer_text(chat_id)
    await message.answer(text, reply_markup=get_computer_inline_keyboard())


@dp.message(Command("–¥–æ–±–∞–≤–∏—Ç—å"))
async def add_user(message: Message, command: CommandObject):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∞–±–ª–µ:\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    # –¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ
    if message.from_user.id != list(all_ships[chat_id]['crew'])[0]:
        await message.answer("–¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –±–æ—Ä—Ç ‚ö†Ô∏è")
        return
    # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, —Ç–æ –º—ã –Ω–µ –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if command.args is None:
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID —É—á–∞—Å—Ç–Ω–∏–∫–∞‚ö†Ô∏è")
        return
    try:
        if add_user_to_white_list(int(command.args), chat_id):
            await message.answer("–£—Å–ø–µ—à–Ω–æ! –ù–æ–≤—ã–π —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω. ‚úÖ")
        else:
            await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ ‚ö†Ô∏è")
    except ValueError:
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ ‚ö†Ô∏è")


@dp.message(Command("—É–¥–∞–ª–∏—Ç—å"))
async def add_user(message: Message, command: CommandObject):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∞–±–ª–µ:\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    # –¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ
    if message.from_user.id != list(all_ships[chat_id]['crew'])[0]:
        await message.answer("–¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚ö†Ô∏è")
        return
    # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, —Ç–æ –º—ã –Ω–µ –º–æ–∂–µ–º —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if command.args is None:
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID —É—á–∞—Å—Ç–Ω–∏–∫–∞ ‚ö†Ô∏è")
        return
    if is_user_allowed(int(command.args), chat_id):
        try:
            if del_user_from_white_list(int(command.args), chat_id):
                await message.answer("–£—Å–ø–µ—à–Ω–æ! –ß–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞ –≤—ã–±—Ä–æ—à–µ–Ω –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Å–º–æ—Å. ‚úÖ")
            else:
                await message.answer("–ö–∞–ø–∏—Ç–∞–Ω –Ω–µ –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è ‚ö†Ô∏è")
        except ValueError:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —á–ª–µ–Ω–∞ —ç–∫–∏–ø–∞–∂–∞ ‚ö†Ô∏è")

    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —á–ª–µ–Ω–∞ —ç–∫–∏–ø–∞–∂–∞ ‚ö†Ô∏è\n–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ ID")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–∫–ª–∞–¥–∞
def get_storage_text(state: dict) -> str:
    return (f"üì¶ –°–∫–ª–∞–¥ –∫–æ—Ä–∞–±–ª—è {state['ship_name']} üì¶\n"
            "=============\n"
            f"üì¶ –†–µ—Å—É—Ä—Å—ã: {state['resources']}\n"
            f"üßØ –û–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª–∏: {state['extinguishers']}\n"
            f"üî´ –°–Ω–∞—Ä—è–¥—ã: {state['bullets']}\n")


# –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –Ω–∞ —Å–∫–ª–∞–¥–µ
@dp.message(Command("—Å–∫–ª–∞–¥"))
async def storage(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∞–±–ª–µ:\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return

    await message.answer(get_storage_text(all_ships[chat_id]), reply_markup=get_storage_inline_keyboard())


# –í—ã–≤–æ–¥–∏—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(Command("id"))
async def send_user_id(message: Message):
    await message.answer(f"–í–∞—à ID: {message.from_user.id}")


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ—Ä–∞–±–ª—è
def check_name(new_name: str) -> bool:
    ships = list(all_ships.items())
    for ship in ships:
        if ship[1]['ship_name'] == new_name:
            return False
    return True


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–æ—Ä–∞–±–ª—è
@dp.message(Command("–Ω–∞–∑–≤–∞–Ω–∏–µ"))
async def change_ship_name(message: Message, command: CommandObject):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if is_actions_blocked(chat_id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return
    # –¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ
    if message.from_user.id != list(all_ships[chat_id]['crew'])[0]:
        await message.answer("–¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ä–∞–±–ª—è ‚ö†Ô∏è")
        return
    # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, —Ç–æ –º—ã –Ω–µ –º–æ–∂–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ—Ä–∞–±–ª—å
    if command.args is None:
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ä–∞–±–ª—è‚ö†Ô∏è")
        return
    # –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å
    try:
        name = command.args
        if not check_name(name):
            # –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–æ
            await message.answer("–≠—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–∂–µ –∑–∞–Ω—è—Ç–æ ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ")
            return

        if len(name) > 18:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ\n–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ‚ö†Ô∏è")
            return
        all_ships[chat_id]["ship_name"] = name
        await message.answer(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ä–∞–±–ª—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {name} ")
    except ValueError:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ\n–ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö —Å–≤—è–∑—å –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞‚ö†Ô∏è")
        return


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ—Ç–∞
async def fly(chat_id: int, planet_name: str):
    if all_ships[chat_id]["on_planet"]:
        await bot.send_message(chat_id,
                               "–ß—Ç–æ–±—ã —É–ª–µ—Ç–µ—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –ø–ª–∞–Ω–µ—Ç—É, –Ω—É–∂–Ω–æ –ø–æ–∫–∏–Ω—É—Ç—å —Ç–µ–∫—É—â—É—é.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–ø–æ–∫–∏–Ω—É—Ç—å")
        return
    if all_ships[chat_id]["ship_fuel"] < 1:
        await bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–ø–ª–∏–≤–∞!Ô∏è‚ö†Ô∏è")
        return
    # —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
    time = random.randint(5, 10) if not all_ships[chat_id]['engine_damaged'] else random.randint(10, 25)
    # –±–ª–æ–∫–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    all_ships[chat_id]["blocked"] = True
    # —É–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
    await bot.send_message(chat_id, f"–ü–æ—Å–∞–¥–∫–∞ –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {planet_name} —á–µ—Ä–µ–∑ {time} —Å–µ–∫—É–Ω–¥")
    await asyncio.sleep(time)
    # –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–º–µ–Ω—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–µ–π—Å—Ç–≤–∏–π
    all_ships[chat_id]["on_planet"] = True
    all_ships[chat_id]["blocked"] = False
    all_ships[chat_id]["planet_name"] = planet_name
    all_ships[chat_id]["previous_planet_name"] = planet_name
    await bot.send_message(chat_id, f"–£—Å–ø–µ—à–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞ –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {planet_name} ")
    if all_ships[chat_id]['connected_chat'] != 'null':
        # –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —á–∞—Ç –æ –ø–æ–ª–µ—Ç–µ –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É
        c_chat_id = int(all_ships[chat_id]['connected_chat'])
        if is_chat_active(c_chat_id):
            chat = await bot.get_chat(chat_id)
            if type(chat.title) != NoneType:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} —á–∞—Ç–∞ {chat.title} –ª–µ—Ç–∏—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {planet_name}!")
            else:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} –ª–µ—Ç–∏—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É {planet_name}!")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ—Å–∞–¥–∫–∏, –ø–æ–ª–µ—Ç–∞ –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É
@dp.message(Command("–ª–µ—Ç–µ—Ç—å"))
async def fly_command(message: Message, command: CommandObject):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if is_actions_blocked(chat_id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, —Ç–æ –ª–µ—Ç–∏–º –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é (—Å–ª–µ–¥—É—é—â—É—é) –ø–ª–∞–Ω–µ—Ç—É
    name = command.args
    if name is None:
        await fly(chat_id, all_ships[chat_id]['next_planet_name'])
    else:
        if len(name) > 18:
            await message.answer("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç—ã —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ‚ö†Ô∏è")
            return

        await fly(chat_id, name)


# –§—É–Ω–∫—Ü–∏—è –≤–∑–ª—ë—Ç–∞ —Å –ø–ª–∞–Ω–µ—Ç–∞
async def leave_planet(chat_id: int):
    if not all_ships[chat_id]["on_planet"]:
        await bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–∫–∏–Ω—É—Ç—å –ø–ª–∞–Ω–µ—Ç—É\n–í—ã –Ω–µ –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ")
        return
    if all_ships[chat_id]["ship_fuel"] < 1:
        await bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–ø–ª–∏–≤–∞!Ô∏è‚ö†Ô∏è")
        return
    # —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
    time = random.randint(5, 10) if not all_ships[chat_id]['engine_damaged'] else random.randint(10, 25)
    # –±–ª–æ–∫–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    all_ships[chat_id]["blocked"] = True
    # —É–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
    await bot.send_message(chat_id, f"–ü–æ–∫–∏–¥–∞–µ–º –ø–ª–∞–Ω–µ—Ç—É {all_ships[chat_id]["planet_name"]} —á–µ—Ä–µ–∑ {time} —Å–µ–∫—É–Ω–¥")
    await asyncio.sleep(time)
    # –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–º–µ–Ω—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–µ–π—Å—Ç–≤–∏–π
    all_ships[chat_id]["on_planet"] = False
    all_ships[chat_id]["blocked"] = False
    all_ships[chat_id]["previous_planet_name"] = all_ships[chat_id]["planet_name"]
    all_ships[chat_id]["next_planet_name"] = random.choice(PLANETS)
    await bot.send_message(chat_id, f"–ú—ã –ø–æ–∫–∏–Ω—É–ª–∏ –ø–ª–∞–Ω–µ—Ç—É {all_ships[chat_id]["previous_planet_name"]}")
    if all_ships[chat_id]['connected_chat'] != 'null':
        # –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —á–∞—Ç –æ –ø–æ–ª–µ—Ç–µ –Ω–∞ –ø–ª–∞–Ω–µ—Ç—É
        c_chat_id = int(all_ships[chat_id]['connected_chat'])
        if is_chat_active(c_chat_id):
            chat = await bot.get_chat(chat_id)
            if type(chat.title) != NoneType:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} —á–∞—Ç–∞ {chat.title} –ø–æ–∫–∏–Ω—É–ª –ø–ª–∞–Ω–µ—Ç—É {all_ships[chat_id]["previous_planet_name"]}!")
            else:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} –ø–æ–∫–∏–Ω—É–ª –ø–ª–∞–Ω–µ—Ç—É {all_ships[chat_id]["previous_planet_name"]}!")


# –ö–æ–º–∞–Ω–¥–∞, —á—Ç–æ–±—ã –ø–æ–∫–∏–Ω—É—Ç—å –ø–ª–∞–Ω–µ—Ç—É
@dp.message(Command("–ø–æ–∫–∏–Ω—É—Ç—å"))
async def leave_planet_command(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    if is_actions_blocked(chat_id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return
    await leave_planet(chat_id)


# –†–µ–º–æ–Ω—Ç –∫–æ—Ä–∞–±–ª—è
async def repair(chat_id: int):
    # –±–ª–æ–∫–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –≤—Ä–µ–º—è —Ä–µ–º–æ–Ω—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    all_ships[chat_id]["blocked"] = True
    # —É–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
    await bot.send_message(chat_id, "–†–µ–º–æ–Ω—Ç–∏—Ä—É–µ–º –∫–æ—Ä–∞–±–ª—å ...")
    for _ in range(5):
        if (all_ships[chat_id]["resources"] - 25) < 1:
            break
        if all_ships[chat_id]["ship_health"] > 99:
            break
        all_ships[chat_id]["resources"] -= 25
        all_ships[chat_id]["ship_health"] += random.randint(5, 10)
        all_ships[chat_id]["crew_oxygen"] += random.randint(2, 5)
        all_ships[chat_id]["crew_health"] += random.randint(2, 5)
        await bot.send_message(chat_id, random.choice(REPAIR_EMOJI))
        await asyncio.sleep(1)
    # –û—Ç–º–µ–Ω—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–µ–π—Å—Ç–≤–∏–π
    all_ships[chat_id]["blocked"] = False
    # –†–µ–º–æ–Ω—Ç–∏—Ä—É–µ–º –∫–æ—Ä–∞–±–ª—å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    all_ships[chat_id]['engine_damaged'] = False
    all_ships[chat_id]['fuel_tank_damaged'] = False
    all_ships[chat_id]['cannon_damaged'] = False
    all_ships[chat_id]['air_leaking'] = False
    check_data(all_ships[chat_id], chat_id)
    await bot.send_message(chat_id, "–†–µ–º–æ–Ω—Ç –∑–∞–≤–µ—Ä—à—ë–Ω")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä–∞–±–ª—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π
def is_ship_damaged(ship: dict) -> bool:
    return ship['air_leaking'] or ship['engine_damaged'] or ship['fuel_tank_damaged'] or ship['cannon_damaged']


# –†–µ–º–æ–Ω—Ç –∫–æ—Ä–∞–±–ª—è
@dp.message(Command("—Ä–µ–º–æ–Ω—Ç"))
async def repair_ship(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    if is_actions_blocked(chat_id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return
    if all_ships[chat_id]['ship_health'] > 99 and not is_ship_damaged(all_ships[chat_id]):
        await message.answer("–†–µ–º–æ–Ω—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
        return

    await repair(chat_id)


# –ö–æ–º–∞–Ω–¥–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è
@dp.message(Command("—Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ"))
async def self_destruction_command(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è")
        return
    if message.from_user.id != list(all_ships[chat_id]['crew'])[0]:
        await message.answer("–¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ ‚ö†Ô∏è")
        return
    await message.answer("–í–´ –£–í–ï–†–ï–ù–´ –í –¢–û–ú, –ß–¢–û –•–û–¢–ò–¢–ï –°–î–ï–õ–ê–¢–¨ –≠–¢–û ?:",
                         reply_markup=get_self_destruction_inline_keyboard())


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
@dp.message(Command("—Å–æ–∑–¥–∞–Ω–∏–µ", "–∫—Ä–∞—Ñ—Ç"))
async def craft(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è üõ†",
                         reply_markup=get_craft_keyboard())


# –°–ª—É—á–∞–π–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞
def random_bad_shot_text() -> str:
    variants = ["–ú–∏–º–æ!", "–ü—Ä–æ–º–∞—Ö!", "–ù–µ –ø–æ–ø–∞–ª!", "–†–∏–∫–æ—à–µ—Ç!", "–ù–µ –ø—Ä–æ–±–∏–ª!"]
    return random.choice(variants)


# –í—ã—Å—Ç—Ä–µ–ª
@dp.message(Command("–≤—ã—Å—Ç—Ä–µ–ª"))
async def shot_command(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    if not all_ships[chat_id]['alien_attack']:
        await message.answer("‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å—Ç—Ä–µ–ª—è—Ç—å, –∫–æ–≥–¥–∞ –Ω–µ—Ç –æ–ø–∞—Å–Ω–æ—Å—Ç–µ–π")
        return
    if int(all_ships[chat_id]['bullets']) < 1:
        await message.answer("‚ö†Ô∏è –£ –Ω–∞—Å –Ω–µ—Ç —Å–Ω–∞—Ä—è–¥–æ–≤!\n–°–æ–∑–¥–∞–π—Ç–µ –∏—Ö –≤ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è (/—Å–æ–∑–¥–∞–Ω–∏–µ)")
        return
    # –°–∏–º—É–ª—è—Ü–∏—è –≤—ã—Å—Ç—Ä–µ–ª–∞
    value = 0.5 if not all_ships[chat_id]['cannon_damaged'] else 0.75
    if random.random() < value:
        await message.answer(f"{random_bad_shot_text()} ‚ö†Ô∏è")
    else:
        all_ships[chat_id]['alien_attack'] = False
        await message.answer("–£—Å–ø–µ—à–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª! ‚úÖ\n–ü—Ä–∏—à–µ–ª—å—Ü—ã —É–Ω–∏—á—Ç–æ–∂–µ–Ω—ã.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ chat id
def get_random_chat_id(my_chat_id: int):
    items = list(all_ships.items())
    if len(items) < 2:
        return my_chat_id
    r_ship = random.choice(items)
    r_chat_id = r_ship[0]
    if my_chat_id == r_chat_id:
        get_random_chat_id(my_chat_id)
    else:
        return int(r_chat_id)


# –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ—Ä–∞–±–ª–µ–º
async def connection(random_chat_id: int, chat_id: int, my_chat_title, args):
    if random_chat_id == chat_id:
        await bot.send_message(chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∫–æ—Ä–∞–±–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    if not is_chat_active(random_chat_id):
        print("—á–∞—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –µ—â—ë —Ä–∞–∑")
        await connect(chat_id, my_chat_title, args)
        return
    if all_ships[random_chat_id]['connected_chat'] != 'null':
        await bot.send_message(chat_id,
                               f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫–æ—Ä–∞–±–ª—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑—å –µ—â—ë —Ä–∞–∑.")
        return

    all_ships[chat_id]['connected_chat'] = f'{random_chat_id}'
    all_ships[random_chat_id]['connected_chat'] = f'{chat_id}'

    print(f"–≤—ã–±—Ä–∞–Ω —á–∞—Ç {random_chat_id} , –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏—è")
    random_chat = await bot.get_chat(random_chat_id)

    if type(random_chat.title) != NoneType:
        r_chat_name = random_chat.title
        await bot.send_message(chat_id,
                               f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å —Å –∫–æ—Ä–∞–±–ª—ë–º {all_ships[random_chat_id]['ship_name']} —á–∞—Ç–∞ {r_chat_name}\n–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /!—Å–≤—è–∑—å")
    else:
        await bot.send_message(chat_id,
                               f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å —Å –∫–æ—Ä–∞–±–ª—ë–º {all_ships[random_chat_id]['ship_name']}\n–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /!—Å–≤—è–∑—å")

    if type(my_chat_title) != NoneType:
        chat_name = my_chat_title
        await bot.send_message(random_chat_id,
                               f"–ú—ã –ø–æ–π–º–∞–ª–∏ —Å–≤—è–∑—å —Å –∫–æ—Ä–∞–±–ª—ë–º {all_ships[chat_id]['ship_name']} —á–∞—Ç–∞ {chat_name}\n–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /!—Å–≤—è–∑—å")
    else:
        await bot.send_message(random_chat_id,
                               f"–ú—ã –ø–æ–π–º–∞–ª–∏ —Å–≤—è–∑—å —Å –∫–æ—Ä–∞–±–ª—ë–º {all_ships[chat_id]['ship_name']}\n–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /!—Å–≤—è–∑—å")


# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—é —Å –∫–æ—Ä–∞–±–ª–µ–º, –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async def connect(chat_id: int, title, args):
    try:
        if type(args) == NoneType:
            # –°–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º –∫–æ—Ä–∞–±–ª–µ–º
            if all_ships[chat_id]['connected_chat'] == 'null':
                random_chat_id = get_random_chat_id(chat_id)
                await connection(random_chat_id, chat_id, title, args)

            else:
                await bot.send_message(chat_id,
                                       f"–£–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å —Å –∫–∞–∫–∏–º-—Ç–æ –∫–æ—Ä–∞–±–ª—ë–º.\n–ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /!—Å–≤—è–∑—å")
        else:
            if all_ships[chat_id]['connected_chat'] == 'null':
                ships_f = 0
                ships_f_id = -1
                ships = list(all_ships.items())
                for ship in ships:
                    if ship[1]['ship_name'] == args:
                        ships_f += 1
                        ships_f_id = int(ship[0])
                if ships_f != 1:
                    await bot.send_message(chat_id,
                                           "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫–æ—Ä–∞–±–ª—é ‚ö†Ô∏è")
                else:
                    await connection(ships_f_id, chat_id, title, args)


            # –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            else:
                connected_chat_id = int(all_ships[chat_id]['connected_chat'])
                if connected_chat_id == chat_id:
                    await bot.send_message(connected_chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π –∫–æ—Ä–∞–±–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    return
                if not is_chat_active(connected_chat_id):
                    all_ships[chat_id]['connected_chat'] = 'null'
                    await bot.send_message(chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å –∫–æ—Ä–∞–±–ª—ë–º. –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
                    return
                if all_ships[connected_chat_id]['connected_chat'] != f'{chat_id}':
                    all_ships[chat_id]['connected_chat'] = 'null'
                    await bot.send_message(chat_id,
                                           f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∫–æ—Ä–∞–±–ª—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑—å –µ—â—ë —Ä–∞–∑.")
                    return
                await bot.send_message(connected_chat_id, f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {args}")
                await bot.send_message(chat_id, f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {args}")

    except ValueError:
        await bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ—Ä–∞–±–ª—ë–º.\n–ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö —Å–≤—è–∑—å –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞‚ö†Ô∏è")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ—Ä–∞–±–ª—è–º–∏
@dp.message(Command("—Å–≤—è–∑—å", "—Å"))
async def connect_to_other_ship(message: Message, command: CommandObject):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    if is_actions_blocked(chat_id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return
    await connect(chat_id, message.chat.title, command.args)


@dp.message(Command("!—Å–≤—è–∑—å", "!—Å"))
async def disconnect_from_other_ship(message: Message):
    chat_id = message.chat.id
    if not is_chat_active(chat_id):
        await message.answer(
            "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–æ—Ä–∞–±–ª–µ–º. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return
    if not is_user_allowed(message.from_user.id, chat_id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return
    if is_actions_blocked(chat_id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return
    if all_ships[chat_id]['connected_chat'] != 'null':
        connected_chat_id = int(all_ships[chat_id]['connected_chat'])
        if not is_chat_active(connected_chat_id):
            all_ships[chat_id]['connected_chat'] = 'null'
            await bot.send_message(chat_id, f"–ú—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–æ—Ä–∞–±–ª—è.")
            return
        connected_chat = await bot.get_chat(connected_chat_id)
        all_ships[chat_id]['connected_chat'] = 'null'
        chat_name = connected_chat.title
        if type(chat_name) != NoneType:
            await bot.send_message(chat_id,
                                   f"–ú—ã –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –∫–æ—Ä–∞–±–ª—è {all_ships[connected_chat_id]['ship_name']} —á–∞—Ç–∞ {chat_name}")
        else:
            await bot.send_message(chat_id,
                                   f"–ú—ã –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –∫–æ—Ä–∞–±–ª—è {all_ships[connected_chat_id]['ship_name']}")

        if all_ships[connected_chat_id]["connected_chat"] == f'{chat_id}':
            all_ships[connected_chat_id]['connected_chat'] = 'null'
            if type(message.chat.title) != NoneType:
                chat_name = message.chat.title
                await bot.send_message(connected_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]["ship_name"]} —á–∞—Ç–∞ {chat_name} –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –Ω–∞—Å.")
            else:
                await bot.send_message(connected_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]["ship_name"]} –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –Ω–∞—Å.")
    else:
        await bot.send_message(chat_id, "–ú—ã —É–∂–µ –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–æ—Ä–∞–±–ª—è ‚ö†Ô∏è")


async def self_destruction_func(chat_id):
    await bot.send_message(chat_id, "üí•")
    text = (
        "üí•üí•üí•üí•üí•\n"
        "–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ö–æ—Ä–∞–±–ª—å —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∏–ª—Å—è."
    )
    remove_chat_from_all_ships(chat_id)
    helpers.chat_utils.delete_chat_state(chat_id)
    await bot.send_message(chat_id, text)


@dp.callback_query(F.data == "update_computer_text")
async def update_computer_text(callback: CallbackQuery):
    print("–û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        await callback.answer()
        return
    new_text = get_computer_text(chat_id)
    if callback.message.text != new_text:
        try:
            await callback.answer()
            await bot.edit_message_text(chat_id=chat_id,
                                        message_id=callback.message.message_id,
                                        text=new_text,
                                        reply_markup=get_computer_inline_keyboard())
            print(f"–¢–µ–∫—Å—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≤ —á–∞—Ç–µ {chat_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
        except TelegramBadRequest:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: TelegramBadRequest")
        except TelegramRetryAfter:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: TelegramRetryAfter")
    else:
        print(f"–¢–µ–∫—Å—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –≤ —á–∞—Ç–µ {chat_id} —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø—Ä–æ—à–ª—ã–º")
        await callback.answer("–£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")


@dp.callback_query(F.data == "update_storage_text")
async def update_storage_text(callback: CallbackQuery):
    print("–û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–∫–ª–∞–¥–∞")
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        await callback.answer()
        return
    new_text = get_storage_text(all_ships[chat_id])
    if callback.message.text != new_text:
        try:
            await callback.answer()
            await bot.edit_message_text(chat_id=chat_id,
                                        message_id=callback.message.message_id,
                                        text=new_text,
                                        reply_markup=get_storage_inline_keyboard())
            print(f"–¢–µ–∫—Å—Ç —Å–∫–ª–∞–¥–∞ –≤ —á–∞—Ç–µ {chat_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
        except TelegramBadRequest:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞: TelegramBadRequest")
        except TelegramRetryAfter:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞: TelegramRetryAfter")
    else:
        print(f"–¢–µ–∫—Å—Ç —Å–∫–ª–∞–¥–∞ –≤ —á–∞—Ç–µ {chat_id} —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø—Ä–æ—à–ª—ã–º")
        await callback.answer("–£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")


# –ú–µ—Ö–∞–Ω–∏–∫–∞ –ø–æ–∂–∞—Ä–æ–≤
async def fire_func(chat_id: int):
    await bot.send_message(chat_id, "üî•")
    await bot.send_message(chat_id, "üî•–ö–æ—Ä–∞–±–ª—å –≥–æ—Ä–∏—Ç!üî•", reply_markup=get_fire_inline_keyboard())
    if all_ships[chat_id]['connected_chat'] != 'null':
        # –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —á–∞—Ç –æ –ø–æ–∂–∞—Ä–µ –Ω–∞ –∫–æ—Ä–∞–±–ª–µ
        c_chat_id = int(all_ships[chat_id]['connected_chat'])
        if is_chat_active(c_chat_id):
            chat = await bot.get_chat(chat_id)
            if type(chat.title) != NoneType:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} —á–∞—Ç–∞ {chat.title} –≥–æ—Ä–∏—Ç!")
            else:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} –≥–æ—Ä–∏—Ç!")

    while True:
        if not is_chat_active(chat_id):
            break
        if not all_ships[chat_id]["fire"]:
            break

        if random.random() > 0.15:
            all_ships[chat_id]["ship_fuel"] -= random.randint(5, 10)
        if random.random() > 0.25:
            all_ships[chat_id]["resources"] -= random.randint(5, 10)
        if random.random() > 0.25:
            all_ships[chat_id]["ship_health"] -= random.randint(5, 10)
        if random.random() > 0.25:
            all_ships[chat_id]["crew_health"] -= random.randint(2, 5)
        if random.random() > 0.25:
            all_ships[chat_id]["crew_oxygen"] -= random.randint(2, 5)

        if random.random() < 0.05 and not all_ships[chat_id]["engine_damaged"]:
            all_ships[chat_id]["engine_damaged"] = True
            await bot.send_message(chat_id, "–î–≤–∏–≥–∞—Ç–µ–ª—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∞! ‚ö†Ô∏è")

        if random.random() < 0.05 and not all_ships[chat_id]["fuel_tank_damaged"]:
            all_ships[chat_id]["fuel_tank_damaged"] = True
            await bot.send_message(chat_id, "–ü—Ä–æ–±–∏—Ç —Ç–æ–ø–ª–∏–≤–Ω—ã–π –±–∞–∫! ‚ö†Ô∏è")

        if random.random() < 0.1:
            await bot.send_message(chat_id, "üî•")
        await asyncio.sleep(3)


# –ú–µ—Ö–∞–Ω–∏–∫–∞ —Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–æ–≤
@dp.callback_query(F.data == "fire_callback")
async def fire_callback(callback: CallbackQuery):
    print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–∞")
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        print("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        await callback.answer()
        return
    if not all_ships[chat_id]["fire"]:
        print("–ö–æ—Ä–∞–±–ª—å –Ω–µ –≥–æ—Ä–∏—Ç")
        await callback.answer("–ö–æ—Ä–∞–±–ª—å –Ω–µ –≥–æ—Ä–∏—Ç.")
        return
    if int(all_ships[chat_id]['extinguishers']) < 1:
        await callback.answer("–ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª–∏! ‚ö†Ô∏è")
        return
    if all_ships[chat_id]["blocked"]:
        await callback.answer("–ú—ã —É–∂–µ —Ç—É—à–∏–º –∫–æ—Ä–∞–±–ª—å!")
        return
    await callback.answer("–¢—É—à–∏–º –∫–æ—Ä–∞–±–ª—å ...")
    all_ships[chat_id]["blocked"] = True
    await bot.send_message(chat_id, "–¢—É—à–∏–º –∫–æ—Ä–∞–±–ª—å ... üßØ")
    for _ in range(random.randint(4, 7)):
        await asyncio.sleep(1)
    await bot.send_message(chat_id, "–ü–æ–∂–∞—Ä –ø–æ—Ç—É—à–µ–Ω!üßØ‚úÖ")
    all_ships[chat_id]['extinguishers'] -= 1
    all_ships[chat_id]["blocked"] = False
    all_ships[chat_id]["fire"] = False


async def delete_message(chat_id: int, message_id: int):
    try:
        await bot.delete_message(chat_id, message_id)
    except TelegramBadRequest:
        print("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")


@dp.callback_query(F.data.startswith("self_destruction_"))
async def self_destruction_callback(callback: CallbackQuery):
    print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è")
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        print("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        await callback.answer()
        return
    if callback.data == "self_destruction_cancel":
        print("–û—Ç–º–µ–Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è")
        await bot.answer_callback_query(callback.id, text="–û—Ç–º–µ–Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è")
        await delete_message(callback.message.chat.id, callback.message.message_id)

    elif callback.data == "self_destruction_continue":
        print(f"–ù–∞—á–∏–Ω–∞–µ–º —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –≤ —á–∞—Ç–µ {chat_id}")
        await bot.answer_callback_query(callback.id, text="–°–ê–ú–û–£–ù–ò–ß–¢–û–ñ–ï–ù–ò–ï")
        try:
            await delete_message(callback.message.chat.id, callback.message.message_id)
        except TelegramBadRequest:
            print("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        await self_destruction_func(callback.message.chat.id)
    await callback.answer()


@dp.callback_query(F.data.startswith("craft_"))
async def craft_callback(callback: CallbackQuery):
    print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        print("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        await callback.answer()
        return
    if callback.data == "craft_exit":
        print("–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
        await bot.answer_callback_query(callback.id, text="–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
        await delete_message(callback.message.chat.id, callback.message.message_id)

    elif callback.data == "craft_extinguisher":
        if int(all_ships[chat_id]['resources']) < 100:
            await bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ ‚ö†Ô∏è")
            return
        all_ships[chat_id]['resources'] -= 100
        all_ships[chat_id]['extinguishers'] += 1
        await bot.answer_callback_query(callback.id, text="–°–æ–∑–¥–∞–Ω –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å")
        await bot.send_message(chat_id, "–°–æ–∑–¥–∞–Ω –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å ‚úÖ\n+ 1 –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—å")
        await delete_message(callback.message.chat.id, callback.message.message_id)

    elif callback.data == "craft_bullet":
        if int(all_ships[chat_id]['resources']) < 50:
            await bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ ‚ö†Ô∏è")
            return
        all_ships[chat_id]['resources'] -= 50
        all_ships[chat_id]['bullets'] += 1
        await bot.answer_callback_query(callback.id, text="–°–æ–∑–¥–∞–Ω —Å–Ω–∞—Ä—è–¥")
        await bot.send_message(chat_id, "–°–æ–∑–¥–∞–Ω —Å–Ω–∞—Ä—è–¥ ‚úÖ\n+ 1 —Å–Ω–∞—Ä—è–¥")
        await delete_message(callback.message.chat.id, callback.message.message_id)

    elif callback.data == "craft_fuel":
        if int(all_ships[chat_id]['resources']) < 75:
            await bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤ ‚ö†Ô∏è")
            return
        if int(all_ships[chat_id]['ship_fuel']) > 99:
            await bot.send_message(chat_id, "–ö–æ—Ä–∞–±–ª—å –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —Ç–æ–ø–ª–∏–≤–µ ‚ö†Ô∏è")
            return
        all_ships[chat_id]['resources'] -= 75
        all_ships[chat_id]['ship_fuel'] += 10
        check_data(all_ships[chat_id], chat_id)
        await bot.answer_callback_query(callback.id, text="–°–æ–∑–¥–∞–Ω–æ —Ç–æ–ø–ª–∏–≤–æ.")
        await bot.send_message(chat_id, "–°–æ–∑–¥–∞–Ω–æ —Ç–æ–ø–ª–∏–≤–æ ‚úÖ\n+ 10% —Ç–æ–ø–ª–∏–≤–∞")
        await delete_message(callback.message.chat.id, callback.message.message_id)

    await callback.answer()


# –ö–æ—Å—Ç—ã–ª—å –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
def check_data(state: dict, chat_id: int):
    state["ship_fuel"] = clamp(state["ship_fuel"], 0, 100)
    state["ship_health"] = clamp(state["ship_health"], 0, 100)
    state["crew_health"] = clamp(state["crew_health"], 0, 100)
    state["crew_oxygen"] = clamp(state["crew_oxygen"], 0, 100)
    state["extinguishers"] = clamp(state["extinguishers"], 0, 256)
    state["bullets"] = clamp(state["bullets"], 0, 128)
    all_ships[chat_id] = state


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
def check_and_save_data(state: dict, chat_id: int):
    check_data(state, chat_id)
    helpers.chat_utils.save_chat_state(chat_id, state)


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç –∏ —Å–±—Ä–æ—Å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
async def game_loop_planet_change(chat_id: int):
    while is_chat_active(chat_id):
        if not all_ships[chat_id]['on_planet']:
            all_ships[chat_id]['previous_planet_name'] = all_ships[chat_id]['next_planet_name']
            all_ships[chat_id]['next_planet_name'] = random.choice(PLANETS)
            all_ships[chat_id]["distance"] = 0
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—É –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
        check_and_save_data(all_ships[chat_id], chat_id)
        await asyncio.sleep(60)


# –ê—Ç–∞–∫–∞ –ø—Ä–∏—à–µ–ª—å—Ü–µ–≤
async def alien_attack(chat_id: int):
    if all_ships[chat_id]['alien_attack']:
        return
    all_ships[chat_id]['alien_attack'] = True
    await bot.send_message(chat_id, "‚ö†Ô∏è –ù–∞—Å –∞—Ç–∞–∫—É—é—Ç –ø—Ä–∏—à–µ–ª—å—Ü—ã! üëΩüõ∏\n–û—Ç–±–µ–π—Ç–µ –∞—Ç–∞–∫—É –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã:\n/–≤—ã—Å—Ç—Ä–µ–ª")
    if all_ships[chat_id]['connected_chat'] != 'null':
        c_chat_id = int(all_ships[chat_id]['connected_chat'])
        if is_chat_active(c_chat_id):
            chat = await bot.get_chat(chat_id)
            if type(chat.title) != NoneType:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} —á–∞—Ç–∞ {chat.title} –∞—Ç–∞–∫—É—é—Ç –ø—Ä–∏—à–µ–ª—å—Ü—ã!")
            else:
                await bot.send_message(c_chat_id,
                                       f"–ö–æ—Ä–∞–±–ª—å {all_ships[chat_id]['ship_name']} –∞—Ç–∞–∫—É—é—Ç –ø—Ä–∏—à–µ–ª—å—Ü—ã!")
    while is_chat_active(chat_id) and all_ships[chat_id]['alien_attack']:
        if random.random() < 0.05:
            all_ships[chat_id]['ship_health'] = clamp(all_ships[chat_id]['ship_health'] - random.randint(1, 10), 0, 100)
            await bot.send_message(chat_id,
                                   f"–ü—Ä–∏—à–µ–ª—å—Ü—ã –ø–æ–ø–∞–ª–∏ –≤ –Ω–∞—Å üëΩ!\n–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è: {all_ships[chat_id]['ship_health']}%")
            if random.random() < 0.25 and not all_ships[chat_id]["fire"]:
                # –ü–æ–∂–∞—Ä –æ—Ç –≤—ã—Å—Ç—Ä–µ–ª–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
                all_ships[chat_id]["fire"] = True
                await fire_func(chat_id)

            if random.random() < 0.1 and not all_ships[chat_id]["engine_damaged"]:
                all_ships[chat_id]["engine_damaged"] = True
                await bot.send_message(chat_id, "–î–≤–∏–≥–∞—Ç–µ–ª—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∞! ‚ö†Ô∏è")

            if random.random() < 0.1 and not all_ships[chat_id]["fuel_tank_damaged"]:
                all_ships[chat_id]["fuel_tank_damaged"] = True
                await bot.send_message(chat_id, "–ü—Ä–æ–±–∏—Ç —Ç–æ–ø–ª–∏–≤–Ω—ã–π –±–∞–∫! ‚ö†Ô∏è")

            if random.random() < 0.1 and not all_ships[chat_id]["cannon_damaged"]:
                all_ships[chat_id]["cannon_damaged"] = True
                await bot.send_message(chat_id, "–û—Ä—É–¥–∏–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ, —Ç–æ—á–Ω–æ—Å—Ç—å —Å—Ç—Ä–µ–ª—å–±—ã —Å–Ω–∏–∂–µ–Ω–∞! ‚ö†Ô∏è")


        await asyncio.sleep(5)


# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –∏–ª–∏ –≤ –∫–æ—Å–º–æ—Å–µ.
async def game_loop_events(chat_id: int):
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
    await asyncio.sleep(5)
    while is_chat_active(chat_id):
        if all_ships[chat_id]["on_planet"]:
            # —Å–æ–±—ã—Ç–∏—è –Ω–∞ –ø–ª–∞–Ω–µ—Ç–∞—Ö
            if random.random() < 0.12:
                # –†–µ—Å—É—Ä—Å—ã –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ
                value = random.randint(50, 125)
                all_ships[chat_id]["resources"] += value
                await bot.send_message(chat_id, f"–ú—ã –Ω–∞—à–ª–∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã!\n–ü–æ–ª—É—á–µ–Ω–æ {value} —Ä–µ—Å—É—Ä—Å–æ–≤")
            if random.random() < 0.08:
                # –ê–Ω–æ–º–∞–ª–∏—è –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ
                value = random.randint(1, 3)
                all_ships[chat_id]["ship_health"] -= value
                await bot.send_message(chat_id,
                                       f"–ê–Ω–æ–º–∞–ª–∏—è –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ. –ö–æ—Ä–∞–±–ª—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!\n–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è: {all_ships[chat_id]["ship_health"]}%")
        else:
            # —Å–æ–±—ã—Ç–∏—è –≤ –∫–æ—Å–º–æ—Å–µ
            if random.random() < 0.03:
                # –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –º—É—Å–æ—Ä
                value = random.randint(1, 8)
                all_ships[chat_id]["ship_health"] -= value
                await bot.send_message(chat_id,
                                       f"–ú—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º –º—É—Å–æ—Ä–æ–º!\n–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è: {all_ships[chat_id]["ship_health"]}%")
            if random.random() < 0.02:
                # –ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –∞–Ω–æ–º–∞–ª–∏—è
                all_ships[chat_id]["next_planet_name"] = random.choice(PLANETS)
                await bot.send_message(chat_id, f"–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –∞–Ω–æ–º–∞–ª–∏—è!\n–ú—ã —Å–±–∏–ª–∏—Å—å —Å –∫—É—Ä—Å–∞")
        # –ó–¥–µ—Å—å –º–æ–≥—É—Ç –±—ã—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
        if random.random() < 0.01 and not all_ships[chat_id]["alien_attack"]:
            # –ê—Ç–∞–∫–∞ –ø—Ä–∏—à–µ–ª—å—Ü–µ–≤
            await alien_attack(chat_id)

        if random.random() < 0.008 and not all_ships[chat_id]["fire"]:
            # –ø–æ–∂–∞—Ä
            all_ships[chat_id]["fire"] = True
            await fire_func(chat_id)

        check_data(all_ships[chat_id], chat_id)
        await asyncio.sleep(30)


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–≥—Ä—ã
async def game_loop(chat_id: int):
    warned_of_air_leak = False
    warned_of_empty_air = False
    warned_of_empty_fuel = False
    while is_chat_active(chat_id):
        if all_ships[chat_id]["ship_fuel"] < 1:
            if not warned_of_empty_fuel:
                await bot.send_message(chat_id, "‚ö†Ô∏è –ó–∞–∫–æ–Ω—á–∏–ª–æ—Å—å —Ç–æ–ø–ª–∏–≤–æ.")
                warned_of_empty_fuel = True
            all_ships[chat_id]["ship_speed"] = random.randint(0, 900)
            all_ships[chat_id]["distance"] += round(all_ships[chat_id]["ship_speed"] / 60)
        else:
            # –ï—Å–ª–∏ –±–∞–∫ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —É–±–∞–≤–ª—è–µ–º —Ç–æ–ø–ª–∏–≤–æ
            if all_ships[chat_id]['fuel_tank_damaged'] and random.random() < 0.15:
                 all_ships[chat_id]["ship_fuel"] -= 1

            # –ò–∑–º–µ–Ω—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∫–æ—Ä–∞–±–ª—è –∏ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –ø—É—Ç—å
            if not all_ships[chat_id]['engine_damaged']:
                all_ships[chat_id]["ship_speed"] = random.randint(28000, 64000)
            else:
                all_ships[chat_id]["ship_speed"] = random.randint(10000, 24000)

            all_ships[chat_id]["distance"] += round(all_ships[chat_id]["ship_speed"] / 60)

            if warned_of_empty_fuel:
                warned_of_empty_fuel = False

            if random.random() < 0.05 and not all_ships[chat_id]["on_planet"]:
                # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø–ª–∏–≤–∞
                all_ships[chat_id]["ship_fuel"] -= 1

        # —É–º–µ–Ω—å—à–∞–µ–º –≤–æ–∑–¥—É—Ö –µ—Å–ª–∏ –∑–¥–æ—Ä–æ–≤—å–µ –∫–æ—Ä–∞–±–ª—è –º–µ–Ω—å—à–µ 1 (0)
        if all_ships[chat_id]["ship_health"] < 1:
            if not warned_of_air_leak:
                await bot.send_message(chat_id, "‚ö†Ô∏è –ö–æ—Ä–ø—É—Å —Ä–∞–∑—Ä—É—à–µ–Ω, —É—Ç–µ—á–∫–∞ –≤–æ–∑–¥—É—Ö–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–º–æ–Ω—Ç.")
                warned_of_air_leak = True

            all_ships[chat_id]["crew_oxygen"] -= random.randint(1, 10)
        else:
            if warned_of_air_leak:
                warned_of_air_leak = False

        # —É–º–µ–Ω—å—à–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –µ—Å–ª–∏ –Ω–µ—Ç –≤–æ–∑–¥—É—Ö–∞
        if all_ships[chat_id]["crew_oxygen"] < 1:
            if not warned_of_empty_air:
                await bot.send_message(chat_id, "‚ö†Ô∏è –ó–∞–∫–æ–Ω—á–∏–ª—Å—è –≤–æ–∑–¥—É—Ö. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–º–æ–Ω—Ç.")
                warned_of_empty_air = True

            all_ships[chat_id]["crew_health"] -= random.randint(1, 10)
        else:
            if warned_of_empty_air:
                warned_of_empty_air = False

        # –∑–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É –µ—Å–ª–∏ –∑–¥–æ—Ä–æ–≤—å–µ —ç–∫–∏–ø–∞–∂–∞ –º–µ–Ω—å—à–µ 1 (0)
        if all_ships[chat_id]["crew_health"] < 1:
            await bot.send_message(chat_id, "–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–≠–∫–∏–ø–∞–∂ –≤—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è. ‚ö†Ô∏è")
            remove_chat_from_all_ships(chat_id)
            helpers.chat_utils.delete_chat_state(chat_id)
            break
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
        check_data(all_ships[chat_id], chat_id)
        # –û–∂–∏–¥–∞–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
        await asyncio.sleep(5)
    await bot.send_message(chat_id, "–ö–æ–Ω–µ—Ü.")


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
async def init():
    try:
        dp.include_routers(start_help_info_handler.router)
        await bot(DeleteWebhook(drop_pending_updates=True))
        await dp.start_polling(bot)
    except CancelledError:
        print("–û—Å—Ç–∞–Ω–æ–≤–∫–∞.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print(f"–û—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Å–º–æ—Å –±–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(init())
