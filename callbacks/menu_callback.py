from aiogram import Router, F
from aiogram.types import CallbackQuery

from bot.messages import delete_message
from bot.save_game import check_and_save_data
from bot.shared import is_chat_active, exist_user_by_id, get_crew_text, all_ships, remove_chat_from_all_ships
from bot.text import get_computer_text, get_storage_text
from utils.check_role import check_role
from utils.edit_bot_message import edit_text
from utils.menu_keyboards import get_computer_menu_keyboard, get_crew_menu_keyboard, get_craft_menu_keyboard, \
    get_self_destruction_keyboard, get_storage_menu_keyboard
from utils.menu_reply_markup import get_main_menu_reply_markup

router = Router()


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞.
@router.callback_query(F.data.startswith("main_menu_"))
async def main_menu_callback(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        await callback.answer("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        return
    if not exist_user_by_id(chat_id, callback.from_user.id):
        await callback.answer("–í—ã –Ω–µ —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞")
        return

    user_id = callback.from_user.id
    captain = user_id == all_ships[chat_id]['crew'][0]['user_id']
    data = callback.data

    # –í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é
    if data == "main_menu_exit":
        await delete_message(callback.message.chat.id, callback.message.message_id)
        await callback.answer("–í—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ä—Ç–æ–≤–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ ...")

    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –Ω–∞ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–º –º–µ–Ω—é (–∫–æ–º–ø—å—é—Ç–µ—Ä, —ç–∫–∏–ø–∞–∂)
    elif callback.data == "main_menu_back":
        await callback.answer("–ù–∞–∑–∞–¥")
        if await edit_text(chat_id, callback.message.message_id, "–ú–µ–Ω—é –±–æ—Ä—Ç–æ–≤–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ üñ•", callback.message.text,
                           get_main_menu_reply_markup(chat_id, callback.from_user.id)):
            await callback.answer("–ù–∞–∑–∞–¥")
        else:
            await callback.answer("–°–±–æ–π!")

    # –ö–æ–º–ø—å—é—Ç–µ—Ä
    elif data == "main_menu_computer":
        await edit_text(chat_id, callback.message.message_id, get_computer_text(chat_id), callback.message.text,
                        get_computer_menu_keyboard())
        await callback.answer("–ë–æ—Ä—Ç–æ–≤–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä")

    # –≠–∫–∏–ø–∞–∂
    elif data == "main_menu_crew":
        await edit_text(chat_id, callback.message.message_id, get_crew_text(chat_id), callback.message.text,
                        get_crew_menu_keyboard())
        await callback.answer("–≠–∫–∏–ø–∞–∂")

    # –°–∫–ª–∞–¥
    elif data == "main_menu_storage":
        await edit_text(chat_id, callback.message.message_id, get_storage_text(chat_id), callback.message.text,
                        get_storage_menu_keyboard())
        await callback.answer("–°–∫–ª–∞–¥")
    # –°–æ–∑–¥–∞–Ω–∏–µ
    elif data == "main_menu_craft":
        if not check_role(2, chat_id, user_id):
            await edit_text(chat_id, callback.message.message_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è üõ†",
                            callback.message.text,
                            get_craft_menu_keyboard())
        else:
            await callback.answer("‚ö†Ô∏è –¢–æ–ª—å–∫–æ –∏–Ω–∂–µ–Ω–µ—Ä –∏–ª–∏ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã")
    # –°–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ
    elif data == "main_menu_selfdestruction":
        if captain:
            await callback.answer("–í—ã —É–≤–µ—Ä–µ–Ω—ã?")
            await edit_text(chat_id, callback.message.message_id, "–í–´ –£–í–ï–†–ï–ù–´ –í –¢–û–ú, –ß–¢–û –•–û–¢–ò–¢–ï –°–î–ï–õ–ê–¢–¨ –≠–¢–û ?:",
                            callback.message.text,
                            get_self_destruction_keyboard())
        else:
            await callback.answer("–¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ ‚ö†Ô∏è")

    # –ü–∞—É–∑–∞
    elif data == "main_menu_pause":
        if captain:
            check_and_save_data(all_ships[chat_id], chat_id)
            remove_chat_from_all_ships(chat_id)
            await edit_text(chat_id, callback.message.message_id,
                            "–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! ‚úÖ\n‚ÑπÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /–∏–≥—Ä–∞—Ç—å (–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ)",
                            callback.message.text, None)
        else:
            await callback.answer("‚ÑπÔ∏è –¢–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É.")


# –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –º–µ–Ω—é –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
@router.callback_query(F.data == "menu_computer_update")
async def computer_menu_callback(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        await callback.answer("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        return
    if not exist_user_by_id(chat_id, callback.from_user.id):
        await callback.answer("–í—ã –Ω–µ —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞")
        return

    if await edit_text(chat_id, callback.message.message_id, get_computer_text(chat_id), callback.message.text,
                       get_computer_menu_keyboard()):
        await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–æ")
    else:
        await callback.answer("–£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")


# –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –º–µ–Ω—é —ç–∫–∏–ø–∞–∂–∞
@router.callback_query(F.data == "menu_crew_update")
async def crew_menu_callback(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        await callback.answer("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        return
    if not exist_user_by_id(chat_id, callback.from_user.id):
        await callback.answer("–í—ã –Ω–µ —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞")
        return

    if await edit_text(chat_id, callback.message.message_id, get_crew_text(chat_id), callback.message.text,
                       get_crew_menu_keyboard()):
        await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–æ")
    else:
        await callback.answer("–£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")


# –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –≤ –º–µ–Ω—é —Å–∫–ª–∞–¥–∞
@router.callback_query(F.data == "menu_storage_update")
async def storage_menu_callback(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        await callback.answer("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        return
    if not exist_user_by_id(chat_id, callback.from_user.id):
        await callback.answer("–í—ã –Ω–µ —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞")
        return

    if await edit_text(chat_id, callback.message.message_id, get_storage_text(chat_id), callback.message.text,
                       get_storage_menu_keyboard()):
        await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–æ")
    else:
        await callback.answer("–£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
