# –¢—É—à–µ–Ω–∏–µ –ø–æ–∂–∞—Ä–æ–≤
import asyncio
import random

from aiogram import F, Router
from aiogram.types import CallbackQuery

from bot.messages import send_message
from bot.shared import is_chat_active, all_ships, exist_user_by_id, get_user_by_id

router = Router()


# –ú–µ—Ö–∞–Ω–∏–∫–∞ —Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–æ–≤
@router.callback_query(F.data == "fire_callback")
async def fire_callback(callback: CallbackQuery):
    print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–∞")
    chat_id = callback.message.chat.id
    if not is_chat_active(chat_id):
        print("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        await callback.answer()
        return
    if not exist_user_by_id(chat_id, callback.from_user.id):
        await callback.answer("–í—ã –Ω–µ —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞")
        return
    role = int(get_user_by_id(chat_id, callback.from_user.id)['user_role'])
    if role != 2 or role != 1:
        await callback.answer("‚ö†Ô∏è –¢–æ–ª—å–∫–æ –∏–Ω–∂–µ–Ω–µ—Ä –∏–ª–∏ –∫–∞–ø–∏—Ç–∞–Ω –º–æ–∂–µ—Ç —Ç—É—à–∏—Ç—å –ø–æ–∂–∞—Ä")
        return
    if not all_ships[chat_id]["fire"]:
        print("–ö–æ—Ä–∞–±–ª—å –Ω–µ –≥–æ—Ä–∏—Ç")
        await callback.answer("–ö–æ—Ä–∞–±–ª—å –Ω–µ –≥–æ—Ä–∏—Ç.")
        return
    if int(all_ships[chat_id]['extinguishers']) < 1:
        await callback.answer("–ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª–∏! ‚ö†Ô∏è")
        return
    if all_ships[chat_id]["blocked"]:
        await callback.answer("–ú—ã —É–∂–µ —Ç—É—à–∏–º –∫–æ—Ä–∞–±–ª—å!")
        return
    await callback.answer("–¢—É—à–∏–º –∫–æ—Ä–∞–±–ª—å ...")
    all_ships[chat_id]["blocked"] = True
    await send_message(chat_id, "–¢—É—à–∏–º –∫–æ—Ä–∞–±–ª—å ... üßØ")
    for _ in range(random.randint(4, 7)):
        await asyncio.sleep(1)
    if not is_chat_active(chat_id):
        print("–ò–≥—Ä–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞")
        return
    await send_message(chat_id, "–ü–æ–∂–∞—Ä –ø–æ—Ç—É—à–µ–Ω!üßØ‚úÖ")
    all_ships[chat_id]['extinguishers'] -= 1
    all_ships[chat_id]["blocked"] = False
    all_ships[chat_id]["fire"] = False
