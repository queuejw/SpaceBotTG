# —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—à GitHUb
import random

from aiogram.exceptions import TelegramBadRequest
from aiogram.types import Message

from bot.bot_data import send_message, bot
from bot.config import BLOCKED_CHATS
from utils.util import clamp

github_link = "https://github.com/queuejw/SpaceBotTG"

all_ships = {}


# –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ –∫–æ—Ä–∞–±–ª—å —á–∞—Ç–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ.
def is_chat_active(chat_id: int) -> bool:
    return chat_id in all_ships


# –£–¥–∞–ª—è–µ—Ç —á–∞—Ç –∏–∑ all_ships
def remove_chat_from_all_ships(chat_id: int):
    if is_chat_active(chat_id):
        all_ships.pop(chat_id)


# –ó–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ–≥–æ —ç–∫–∏–ø–∞–∂–∞. –†–∞–∑–º–µ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
def get_total_crew_health(chat_id: int) -> int:
    value = 0
    for i in all_ships[chat_id]['crew']:
        value += int(i['user_health'])
    return value


# –ó–¥–æ—Ä–æ–≤—å–µ –æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
def get_crew_health(chat_id: int, user_id: int) -> int:
    for i in all_ships[chat_id]['crew']:
        if int(i['user_id']) == user_id:
            return int(i['user_health'])
    return -1


# –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
def get_crew_role(chat_id: int, user_id: int) -> int:
    for i in all_ships[chat_id]['crew']:
        if int(i['user_id']) == user_id:
            return int(i['user_id'])
    return -1


# –£–º–µ–Ω—å—à–∞–µ–º —É—Ä–æ–Ω —É –≤—Å–µ—Ö –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö min_value - max_value
def damage_all_crew(chat_id: int, min_value: int, max_value: int):
    for i in all_ships[chat_id]['crew']:
        i['user_health'] = clamp(i['user_health'] - random.randint(min_value, max_value), 0, 100)


# –£–º–µ–Ω—å—à–∞–µ–º —É—Ä–æ–Ω —É –æ–¥–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
def damage_crew(chat_id: int, user_id: int, value: int):
    for i in all_ships[chat_id]['crew']:
        if int(i['user_id']) == user_id:
            i['user_health'] = clamp(i['user_health'] - value, 0, 100)


def get_random_crew(data: list, captain: dict) -> dict:
    user: dict = random.choice(data)
    if user == captain:
        # –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑
        return get_random_crew(data, captain)
    return user


#  –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
def exist_user_by_id(chat_id: int, user_id: int) -> bool:
    for i in all_ships[chat_id]['crew']:
        if i['user_id'] == user_id:
            return True
    return False


#  –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
def exist_user_by_name(chat_id: int, user_name: str) -> bool:
    for i in all_ships[chat_id]['crew']:
        if i['user_name'] == user_name:
            return True
    return False


# –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –≤ –¥–∞–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–æ
def is_actions_blocked(chat_id: int) -> bool:
    return all_ships[chat_id]['blocked']


# –í–µ—Ä–Ω–µ—Ç True, –µ—Å–ª–∏ —á–∞—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
def is_chat_banned(chat_id) -> bool:
    if chat_id in BLOCKED_CHATS:
        print(f"{chat_id} –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False")
        return True
    else:
        return False


async def can_proceed(message: Message) -> bool:
    if is_chat_banned(message.chat.id):
        await message.answer(
            "ü™ê‚ùå –í–∞—à —á–∞—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. \n–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –±—ã–ª–∞ –æ—à–∏–±–∫–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: @queuejw")
        return False
    if not is_chat_active(message.chat.id):
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∞–±–ª–µ:\n–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. ‚ö†Ô∏è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /–∏–≥—Ä–∞—Ç—å")
        return False
    if not exist_user_by_id(message.chat.id, message.from_user.id):
        await message.answer(
            "–¢–æ–ª—å–∫–æ —ç–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. ‚ö†Ô∏è")
        return False
    if is_actions_blocked(message.chat.id):
        await message.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥—Ä—É–≥–∞—è –∑–∞–¥–∞—á–∞. ‚ö†Ô∏è")
        return False
    return True


async def delete_message(chat_id: int, message_id: int):
    try:
        await bot.delete_message(chat_id, message_id)
    except TelegramBadRequest as e:
        print(f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω–∞–º –∏–∑–≤–µ—Å—Ç–Ω–æ: {e}")


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ï—Å–ª–∏ –Ω–∞ –Ω—É–ª–µ - —É–¥–∞–ª—è–µ–º. –ï—Å–ª–∏ –ø–æ–≥–∏–±–∞–µ—Ç –∫–∞–ø–∏—Ç–∞–Ω, –ø–µ—Ä–µ–¥–∞–µ–º —Ä–æ–ª—å —Å–ª—É—á–∞–π–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É
async def check_all_crew(chat_id: int):
    index = 0
    print("–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–∫–æ–≤")
    print(all_ships[chat_id]['crew'])
    data: list = all_ships[chat_id]['crew']
    for i in data:
        print(i)
        if i['user_health'] < 1:
            if i['user_role'] == 1:
                print("–ü–µ—Ä–µ–¥–∞–µ–º —Ä–æ–ª—å –∫–∞–ø–∏—Ç–∞–Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É")
                if len(data) > 1:
                    data.remove(i)
                    random_crew = get_random_crew(data, i)
                    print(f"–≤—ã–±—Ä–∞–Ω –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–∞–≤ –∏–≥—Ä–æ–∫ {random_crew}")
                    if random_crew['user_role'] == 1:
                        print("–≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ —É–∂–µ –∫–∞–ø–∏—Ç–∞–Ω.")

                    data[0] = random_crew
                    data[0]['user_role'] = 1

                    await send_message(chat_id,
                                       f"–ö–∞–ø–∏—Ç–∞–Ω {i['user_name']} –ø–æ–≥–∏–±! üòµ\n–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –∫–∞–ø–∏—Ç–∞–Ω–∞: {data[0]['user_name']} üëë")
                else:
                    print("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å —Ä–æ–ª—å")
                    data.remove(i)
                    await send_message(chat_id,
                                       f"–ö–∞–ø–∏—Ç–∞–Ω {i['user_name']} –ø–æ–≥–∏–±! üòµ")
                print("–ø–æ–ª—É—á–∏–ª–∞—Å—å —Ç–∞–∫–∞—è –∫–∞—à–∞")
                print(data)
            else:
                print("–ö–∞–∫–æ–π-—Ç–æ –∏–≥—Ä–æ–∫ –ø–æ–≥–∏–±")
                if len(data) > 1:
                    print(i)
                    data.remove(i)
                    await send_message(chat_id,
                                       f"{get_crew_role_by_num(int(i['user_role']))} {i['user_name']} –ø–æ–≥–∏–± üòµ")
                else:
                    print("–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
        index += 1
    all_ships[chat_id]['crew'] = data
    print("–∫–æ–Ω–µ—Ü –ø—Ä–æ–≤–µ—Ä–∫–∏")


# –ï—Å–ª–∏ –æ–±—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ –Ω—É–ª–µ, —Ç–æ –≤–µ—Ä–Ω–µ—Ç False
def is_crew_alive(chat_id: int) -> bool:
    return get_total_crew_health(chat_id) > 1


def get_crew_role_by_num(value: int) -> str:
    match value:
        case 1:
            return "–ö–∞–ø–∏—Ç–∞–Ω"
        case 2:
            return "–Ω–µ –ø—Ä–∏–¥—É–º–∞–ª"
        case _:
            return "–ß–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞"


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —ç–∫–∏–ø–∞–∂–∞
def get_crew_text(chat_id) -> str:
    text = f"–≠–∫–∏–ø–∞–∂ –∫–æ—Ä–∞–±–ª—è {all_ships[chat_id]['ship_name']}:\n\n"
    for i in all_ships[chat_id]['crew']:
        text = text + f"üë§ {i['user_name']} : {get_crew_role_by_num(i['user_role'])}\n"
    return text


def get_crew_str(item: dict) -> str:
    return (
        f"üë§ {item['user_name']}:\n"
        "=====\n"
        f"‚≠ê –†–æ–ª—å: {get_crew_role_by_num(item['user_role'])}\n"
        f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {item['user_health']}%\n"
    )
